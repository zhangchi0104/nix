# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
let 
  btrfsCommonOptions = [
    "defaults"
    "lazytime"
    "noatime"
    "compress=zstd"
    "autodefrag"
    "nodiscard"
  ];
in
{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];
  
  boot.initrd.availableKernelModules = [ "vmd" "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/4e013ec1-eed7-4c79-999a-f8782f3e959d";
      fsType = "btrfs";
      options = [ "subvol=@root" ] ++ btrfsCommonOptions;
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/4e013ec1-eed7-4c79-999a-f8782f3e959d";
      fsType = "btrfs";
      options = [ "subvol=@home" ] ++ btrfsCommonOptions;
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/4e013ec1-eed7-4c79-999a-f8782f3e959d";
      fsType = "btrfs";
      options = [ "subvol=@nix" ] ++ btrfsCommonOptions;
    };
  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/4e013ec1-eed7-4c79-999a-f8782f3e959d";
      fsType = "btrfs";
      options = [ "subvol=@swap" ] ++ btrfsCommonOptions;
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/61AD-EE51";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/mnt/data" =
    {
      device = "/dev/disk/by-uuid/21dfca5f-0378-4348-8b8a-deece54923af";
      fsType = "ext4";
      options = [ "user" ];
    };

  swapDevices = [ { device = "/swap/swapfile"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  services.xserver.videoDrivers = ["nvidia"];
  hardware.nvidia = {
    modesetting.enable = true;
    powerManagement = {
      enable = false;
    };
    open = true;
    nvidiaSettings = true;
    package = config.boot.kernelPackages.nvidiaPackages.stable;
  };
}
